{"version":3,"file":"index.js","sources":["../../src/preload.ts"],"sourcesContent":["import { contextBridge, ipcRenderer } from 'electron';\r\n\r\ncontextBridge.exposeInMainWorld('app', {\r\n  name: 'Electron Notepad'\r\n});\r\n\r\ncontextBridge.exposeInMainWorld('electronAPI', {\r\n  minimizeWindow: () => ipcRenderer.invoke('window:minimize'),\r\n  toggleMaximizeWindow: () => ipcRenderer.invoke('window:toggle-maximize'),\r\n  closeWindow: () => ipcRenderer.invoke('window:close'),\r\n  reload: () => ipcRenderer.invoke('window:reload'),\r\n  forceReload: () => ipcRenderer.invoke('window:force-reload'),\r\n  toggleDevTools: () => ipcRenderer.invoke('window:toggle-devtools'),\r\n  isDevToolsOpen: () => ipcRenderer.invoke('window:is-devtools-open') as Promise<boolean>,\r\n  onDevToolsStateChanged: (callback: (open: boolean) => void) => {\r\n    const listener = (_event: Electron.IpcRendererEvent, open: boolean) => callback(open);\r\n    ipcRenderer.on('devtools-state-changed', listener);\r\n    return () => ipcRenderer.removeListener('devtools-state-changed', listener);\r\n  },\r\n  toggleFullscreen: () => ipcRenderer.invoke('window:toggle-fullscreen'),\r\n  zoomReset: () => ipcRenderer.invoke('window:zoom-reset'),\r\n  zoomIn: () => ipcRenderer.invoke('window:zoom-in'),\r\n  zoomOut: () => ipcRenderer.invoke('window:zoom-out'),\r\n  getZoomLevel: () => ipcRenderer.invoke('window:get-zoom-level') as Promise<number>,\r\n  onZoomChanged: (callback: (zoomFactor: number) => void) => {\r\n    const listener = (_event: Electron.IpcRendererEvent, zoomFactor: number) => callback(zoomFactor);\r\n    ipcRenderer.on('zoom-changed', listener);\r\n    return () => ipcRenderer.removeListener('zoom-changed', listener);\r\n  },\r\n  openFile: () => ipcRenderer.invoke('file:open'),\r\n  saveFile: (args: { path?: string; content: string }) => ipcRenderer.invoke('file:save', args),\r\n  saveFileAs: (args: { content: string }) => ipcRenderer.invoke('file:save-as', args)\r\n});\r\n\r\nexport {};\r\n\r\n\r\n"],"names":["contextBridge","ipcRenderer"],"mappings":";;AAEAA,SAAAA,cAAc,kBAAkB,OAAO;AAAA,EACrC,MAAM;AACR,CAAC;AAEDA,SAAAA,cAAc,kBAAkB,eAAe;AAAA,EAC7C,gBAAgB,MAAMC,SAAAA,YAAY,OAAO,iBAAiB;AAAA,EAC1D,sBAAsB,MAAMA,SAAAA,YAAY,OAAO,wBAAwB;AAAA,EACvE,aAAa,MAAMA,SAAAA,YAAY,OAAO,cAAc;AAAA,EACpD,QAAQ,MAAMA,SAAAA,YAAY,OAAO,eAAe;AAAA,EAChD,aAAa,MAAMA,SAAAA,YAAY,OAAO,qBAAqB;AAAA,EAC3D,gBAAgB,MAAMA,SAAAA,YAAY,OAAO,wBAAwB;AAAA,EACjE,gBAAgB,MAAMA,SAAAA,YAAY,OAAO,yBAAyB;AAAA,EAClE,wBAAwB,CAAC,aAAsC;AAC7D,UAAM,WAAW,CAAC,QAAmC,SAAkB,SAAS,IAAI;AACpFA,yBAAY,GAAG,0BAA0B,QAAQ;AACjD,WAAO,MAAMA,SAAAA,YAAY,eAAe,0BAA0B,QAAQ;AAAA,EAC5E;AAAA,EACA,kBAAkB,MAAMA,SAAAA,YAAY,OAAO,0BAA0B;AAAA,EACrE,WAAW,MAAMA,SAAAA,YAAY,OAAO,mBAAmB;AAAA,EACvD,QAAQ,MAAMA,SAAAA,YAAY,OAAO,gBAAgB;AAAA,EACjD,SAAS,MAAMA,SAAAA,YAAY,OAAO,iBAAiB;AAAA,EACnD,cAAc,MAAMA,SAAAA,YAAY,OAAO,uBAAuB;AAAA,EAC9D,eAAe,CAAC,aAA2C;AACzD,UAAM,WAAW,CAAC,QAAmC,eAAuB,SAAS,UAAU;AAC/FA,yBAAY,GAAG,gBAAgB,QAAQ;AACvC,WAAO,MAAMA,SAAAA,YAAY,eAAe,gBAAgB,QAAQ;AAAA,EAClE;AAAA,EACA,UAAU,MAAMA,SAAAA,YAAY,OAAO,WAAW;AAAA,EAC9C,UAAU,CAAC,SAA6CA,SAAAA,YAAY,OAAO,aAAa,IAAI;AAAA,EAC5F,YAAY,CAAC,SAA8BA,SAAAA,YAAY,OAAO,gBAAgB,IAAI;AACpF,CAAC;"}