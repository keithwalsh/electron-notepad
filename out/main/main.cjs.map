{"version":3,"file":"main.cjs","sources":["../../src/main.ts"],"sourcesContent":["import { app, BrowserWindow, shell, ipcMain } from 'electron';\r\nimport { join, dirname } from 'path';\r\nimport { fileURLToPath } from 'url';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\n\r\ndeclare const MAIN_WINDOW_VITE_DEV_SERVER_URL: string | undefined;\r\ndeclare const MAIN_WINDOW_VITE_NAME: string;\r\n\r\nlet mainWindow: BrowserWindow | null = null;\r\n\r\nasync function createMainWindow() {\r\n  mainWindow = new BrowserWindow({\r\n    width: 900,\r\n    height: 700,\r\n    frame: false, // Remove default frame for custom window controls\r\n    webPreferences: {\r\n      preload: join(__dirname, '../preload/index.js'),\r\n      contextIsolation: true,\r\n      nodeIntegration: false\r\n    }\r\n  });\r\n\r\n  mainWindow.webContents.setWindowOpenHandler(({ url }) => {\r\n    shell.openExternal(url);\r\n    return { action: 'deny' };\r\n  });\r\n\r\n  if (MAIN_WINDOW_VITE_DEV_SERVER_URL) {\r\n    await mainWindow.loadURL(MAIN_WINDOW_VITE_DEV_SERVER_URL);\r\n    mainWindow.webContents.openDevTools();\r\n  } else {\r\n    await mainWindow.loadFile(join(__dirname, `../renderer/${MAIN_WINDOW_VITE_NAME}/index.html`));\r\n  }\r\n}\r\n\r\napp.whenReady().then(async () => {\r\n  await createMainWindow();\r\n\r\n  app.on('activate', () => {\r\n    if (BrowserWindow.getAllWindows().length === 0) {\r\n      void createMainWindow();\r\n    }\r\n  });\r\n});\r\n\r\napp.on('window-all-closed', () => {\r\n  if (process.platform !== 'darwin') app.quit();\r\n});\r\n\r\n// IPC handlers for window controls\r\nipcMain.handle('window:minimize', () => {\r\n  if (mainWindow) {\r\n    mainWindow.minimize();\r\n  }\r\n});\r\n\r\nipcMain.handle('window:toggle-maximize', () => {\r\n  if (mainWindow) {\r\n    if (mainWindow.isMaximized()) {\r\n      mainWindow.unmaximize();\r\n    } else {\r\n      mainWindow.maximize();\r\n    }\r\n  }\r\n});\r\n\r\nipcMain.handle('window:close', () => {\r\n  if (mainWindow) {\r\n    mainWindow.close();\r\n  }\r\n});\r\n\r\n\r\n"],"names":["__filename","fileURLToPath","__dirname","dirname","BrowserWindow","join","url","shell","app","ipcMain"],"mappings":";;;;;AAIA,MAAMA,eAAaC,IAAAA,+PAA6B;AAChD,MAAMC,cAAYC,KAAAA,QAAQH,YAAU;AAKpC,IAAI,aAAmC;AAEvC,eAAe,mBAAmB;AAChC,eAAa,IAAII,SAAAA,cAAc;AAAA,IAC7B,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA;AAAA,IACP,gBAAgB;AAAA,MACd,SAASC,KAAAA,KAAKH,aAAW,qBAAqB;AAAA,MAC9C,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,IAAA;AAAA,EACnB,CACD;AAED,aAAW,YAAY,qBAAqB,CAAC,EAAE,KAAAI,WAAU;AACvDC,aAAAA,MAAM,aAAaD,IAAG;AACtB,WAAO,EAAE,QAAQ,OAAA;AAAA,EACnB,CAAC;AAEoC;AACnC,UAAM,WAAW,QAAQ,uBAA+B;AACxD,eAAW,YAAY,aAAA;AAAA,EACzB;AAGF;AAEAE,SAAAA,IAAI,UAAA,EAAY,KAAK,YAAY;AAC/B,QAAM,iBAAA;AAENA,eAAI,GAAG,YAAY,MAAM;AACvB,QAAIJ,uBAAc,gBAAgB,WAAW,GAAG;AAC9C,WAAK,iBAAA;AAAA,IACP;AAAA,EACF,CAAC;AACH,CAAC;AAEDI,SAAAA,IAAI,GAAG,qBAAqB,MAAM;AAChC,MAAI,QAAQ,aAAa,SAAUA,UAAAA,IAAI,KAAA;AACzC,CAAC;AAGDC,SAAAA,QAAQ,OAAO,mBAAmB,MAAM;AACtC,MAAI,YAAY;AACd,eAAW,SAAA;AAAA,EACb;AACF,CAAC;AAEDA,SAAAA,QAAQ,OAAO,0BAA0B,MAAM;AAC7C,MAAI,YAAY;AACd,QAAI,WAAW,eAAe;AAC5B,iBAAW,WAAA;AAAA,IACb,OAAO;AACL,iBAAW,SAAA;AAAA,IACb;AAAA,EACF;AACF,CAAC;AAEDA,SAAAA,QAAQ,OAAO,gBAAgB,MAAM;AACnC,MAAI,YAAY;AACd,eAAW,MAAA;AAAA,EACb;AACF,CAAC;"}